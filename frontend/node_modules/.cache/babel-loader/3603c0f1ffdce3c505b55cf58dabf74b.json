{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"App\",\n  data: function data() {\n    return {\n      user: {},\n      newEmail: \"\",\n      newBio: \"\",\n      newUser: {\n        email: \"\",\n        password: \"\",\n        bio: \"\",\n        image: \"\"\n      },\n      emailRules: [function (v) {\n        return !!v || \"Adresse email requise\";\n      }, function (v) {\n        return /^(([^<>()[\\]\\\\.,;:\\s@']+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v) || \"Une adresse email valide est requise\";\n      }]\n    };\n  },\n  methods: {\n    exitSession: function exitSession() {\n      this.$router.push(\"/\");\n      localStorage.clear();\n    },\n    returnMain: function returnMain() {\n      this.$router.push(\"/main\");\n    },\n    // Update img\n    updateImg: function updateImg() {\n      var local = JSON.parse(localStorage.user);\n      var userId = local.userId;\n      var token = local.token;\n      axios.put(\"http://localhost:3000/auth/update/\" + userId, {\n        image: this.newImg\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        Swal.fire({\n          text: \"Modification de l'image réussie\",\n          icon: \"success\",\n          timer: 1200,\n          showConfirmButton: false,\n          timerProgressBar: true,\n          willClose: function willClose() {\n            location.reload();\n          }\n        });\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    },\n    // Update EMAIL\n    updateEmail: function updateEmail() {\n      var local = JSON.parse(localStorage.user);\n      var userId = local.userId;\n      var token = local.token;\n      axios.put(\"http://localhost:3000/auth/update/\" + userId, {\n        email: this.newEmail\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        Swal.fire({\n          text: \"Modification de l'adresse Email réussie !\",\n          footer: \"Redirection en cours...\",\n          icon: \"success\",\n          timer: 1000,\n          showConfirmButton: false,\n          timerProgressBar: true,\n          willClose: function willClose() {\n            location.reload();\n          }\n        });\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    },\n    // Update PASSWORD\n    updatePassword: function updatePassword() {\n      var local = JSON.parse(localStorage.user);\n      var userId = local.userId;\n      var token = local.token;\n\n      if (this.newPassword === this.newPasswordConfirm) {\n        axios.put(\"http://localhost:3000/auth/update/\" + userId, {\n          password: this.newPassword\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        }).then(function (res) {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification du Mot de passe réussi !\",\n            icon: \"success\",\n            timer: 1200,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: function willClose() {\n              location.reload();\n            }\n          });\n        }).catch(function (error) {\n          console.log(error.response.data.error);\n        });\n      } else {\n        alert(\"Mot de passe non confirmé\");\n      }\n    },\n    // Update BIO\n    updateBio: function updateBio() {\n      var local = JSON.parse(localStorage.user);\n      var userId = local.userId;\n      var token = local.token;\n      axios.put(\"http://localhost:3000/auth/update/\" + userId, {\n        bio: this.newBio\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        Swal.fire({\n          text: \"Modification de la bio réussie\",\n          icon: \"success\",\n          timer: 1200,\n          showConfirmButton: false,\n          timerProgressBar: true,\n          willClose: function willClose() {\n            location.reload();\n          }\n        });\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    },\n    // Delete User\n    deleteUser: function deleteUser() {\n      var _this = this;\n\n      var local = JSON.parse(localStorage.user);\n      var token = local.token;\n      axios.delete(\"http://localhost:3000/auth/delete\", {\n        headers: {\n          Authorization: \"Bearer \" + token\n        },\n        data: local\n      }).then(function (res) {\n        console.log(res.data);\n        Swal.fire({\n          text: \"Compte supprimé\",\n          icon: \"success\",\n          timer: 1500,\n          showConfirmButton: false,\n          timerProgressBar: true,\n          willClose: function willClose() {\n            localStorage.clear();\n\n            _this.$router.push(\"/\");\n          }\n        });\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    },\n    // Récupération de l'utilisateur\n    getUser: function getUser() {\n      var _this2 = this;\n\n      var local = JSON.parse(localStorage.user);\n      var userId = local.userId;\n      var token = local.token;\n      axios.get(\"http://localhost:3000/auth/\" + userId, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(function (res) {\n        _this2.user = res.data;\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    }\n  },\n  created: function created() {\n    this.getUser();\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","user","newEmail","newBio","newUser","email","password","bio","image","emailRules","v","methods","exitSession","localStorage","returnMain","updateImg","axios","put","headers","Authorization","then","console","Swal","text","icon","timer","showConfirmButton","timerProgressBar","willClose","location","catch","updateEmail","footer","updatePassword","alert","updateBio","deleteUser","delete","getUser","get","created"],"sourceRoot":"src/views","sources":["AccountView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-card width=\"100%\" max-width=\"800\" class=\"mx-auto overflow-hidden\">\n      <v-app-bar color=\"red lighten-4\">\n        <v-btn @click=\"returnMain\" class=\"ma-2\" color=\"red lighten-3\" dark>\n          Fil d'actu\n          <v-icon dark right> mdi-chat-processing </v-icon>\n        </v-btn>\n        <v-spacer></v-spacer>\n        <v-toolbar-title>Mon compte</v-toolbar-title>\n        <v-spacer></v-spacer>\n\n        <v-btn @click=\"exitSession\" class=\"ma-2\" color=\"red lighten-3\" dark>\n          Quitter\n          <v-icon dark right> mdi-cancel </v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <div class=\"accountCont\">\n        <div\n          class=\"userPict\"\n          :style=\"{ backgroundImage: 'url(' + this.user[0][`image`] + ')' }\"\n        ></div>\n        <div class=\"infoUser\">\n          <h3>Prenom : {{ this.user[0][\"prenom\"] }}</h3>\n          <h3>email : {{ this.user[0][\"email\"] }}</h3>\n          <div class=\"bio\">\n            <h3>Ma bio :</h3>\n            <p>{{ this.user[0][\"bio\"] }}</p>\n          </div>\n        </div>\n        <div class=\"update\">\n          <h2>Modifier ses informations :</h2>\n          <v-form class=\"formUpdate\">\n            <div class=\"formDiv\">\n              <label for=\"newEmail\">Modifier l'adresse email</label>\n              <v-text-field\n                type=\"text\"\n                name=\"newEmail\"\n                id=\"newEmail\"\n                placeholder=\"Adresse mail valide\"\n                v-model=\"newEmail\"\n                :rules=\"emailRules\"\n              ></v-text-field>\n              <button class=\"formBtn\" @click.prevent=\"updateEmail\">\n                Modifier\n              </button>\n            </div>\n\n            <div class=\"formDiv\">\n              <label for=\"newPassword\">Modifier le mot de passe </label>\n              <v-text-field\n                type=\"password\"\n                name=\"newPassword\"\n                id=\"newPassword\"\n                placeholder=\"6 caractères minimum\"\n                v-model=\"newPassword\"\n              ></v-text-field>\n              <label for=\"newPasswordConfirm\">Confirmer le mot de passe</label>\n              <v-text-field\n                type=\"password\"\n                name=\"newPasswordConfirm\"\n                id=\"NewPasswordConfirm\"\n                placeholder=\"6 caractères minimum\"\n                v-model=\"newPasswordConfirm\"\n              ></v-text-field>\n              <button class=\"formBtn\" @click.prevent=\"updatePassword\">\n                Modifier\n              </button>\n            </div>\n\n            <div class=\"formDiv\">\n              <label for=\"newImg\">Modifier image du profil</label>\n              <input\n                type=\"text\"\n                name=\"newImg\"\n                id=\"newImg\"\n                placeholder=\"Copier ici l'url de votre image\"\n                v-model=\"newImg\"\n              />\n              <button class=\"formBtn\" @click.prevent=\"updateImg\">\n                Modifier\n              </button>\n            </div>\n\n            <div class=\"formDiv\">\n              <label for=\"newBio\">Modifier la biographie</label>\n              <textarea\n                name=\"newBio\"\n                id=\"newBio\"\n                v-model=\"newBio\"\n              ></textarea>\n              <button class=\"formBtn\" @click.prevent=\"updateBio\">\n                Modifier\n              </button>\n            </div>\n          </v-form>\n        </div>\n        <button class=\"btnDelete\" @click.prevent=\"deleteUser\">\n          Supprimer Compte\n        </button>\n      </div>\n    </v-card>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  name: \"App\",\n\n  data() {\n    return {\n      user: {},\n      newEmail:\"\",\n      newBio:``,\n\n      newUser: {\n        email: \"\",\n        password: \"\",\n        bio: \"\",\n        image: \"\",\n      },\n\n      emailRules: [\n        (v) => !!v || \"Adresse email requise\",\n        (v) =>\n          /^(([^<>()[\\]\\\\.,;:\\s@']+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n            v\n          ) || \"Une adresse email valide est requise\",\n      ],\n\n    };\n  },\n\n  methods: {\n    exitSession() {\n      this.$router.push(\"/\");\n      localStorage.clear();\n    },\n    returnMain() {\n      this.$router.push(\"/main\");\n    },\n    \n    // Update img\n    updateImg() {\n      let local = JSON.parse(localStorage.user);\n      let userId = local.userId;\n      let token = local.token;\n        axios\n          .put(\"http://localhost:3000/auth/update/\"+ userId,\n           { image: this.newImg }, {\n            headers: {\n              Authorization: \"Bearer \" + token,\n            },\n          })\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification de l'image réussie\",\n              icon: \"success\",\n              timer: 1200,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n    },\n    // Update EMAIL\n    updateEmail() {\n      let local = JSON.parse(localStorage.user);\n      let userId = local.userId;\n      let token = local.token;\n\n      axios\n        .put(\n          \"http://localhost:3000/auth/update/\" + userId,\n          { email: this.newEmail },\n          {\n            headers: {\n              Authorization: \"Bearer \" + token,\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification de l'adresse Email réussie !\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: () => {\n              location.reload();\n            },\n          });\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n        });\n    },\n    // Update PASSWORD\n    updatePassword() {\n      let local = JSON.parse(localStorage.user);\n      let userId = local.userId;\n      let token = local.token;\n\n        if (this.newPassword === this.newPasswordConfirm) {\n          \n          axios\n            .put(\n              `http://localhost:3000/auth/update/`+ userId,\n              { password: this.newPassword },\n              {\n                headers: {\n                  Authorization: \"Bearer \" + token,\n                },\n              }\n            )\n            .then((res) => {\n              console.log(res.data);\n              Swal.fire({\n                text: \"Modification du Mot de passe réussi !\",\n                icon: \"success\",\n                timer: 1200,\n                showConfirmButton: false,\n                timerProgressBar: true,\n                willClose: () => {\n                  location.reload();\n                },\n              });\n            })\n            .catch((error) => {\n              console.log(error.response.data.error);\n            });\n        } else {\n          alert(\"Mot de passe non confirmé\");\n        }\n    },\n\n    // Update BIO\n    updateBio() {\n      let local = JSON.parse(localStorage.user);\n      let userId = local.userId;\n      let token = local.token;\n        axios\n          .put(\n            \"http://localhost:3000/auth/update/\"+ userId,\n            { bio: this.newBio },\n            {\n              headers: {\n                Authorization: \"Bearer \" + token,\n              },\n            }\n          )\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification de la bio réussie\",\n              icon: \"success\",\n              timer: 1200,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n    },\n    // Delete User\n    deleteUser() {\n      let local = JSON.parse(localStorage.user);\n\n      let token = local.token;\n      axios\n        .delete(\"http://localhost:3000/auth/delete\", {\n          headers: {\n            Authorization: \"Bearer \" + token,\n          },\n          data: local,\n        })\n        .then((res) => {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Compte supprimé\",\n            icon: \"success\",\n            timer: 1500,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: () => {\n              localStorage.clear();\n              this.$router.push(\"/\");\n            },\n          });\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n        });\n    },\n    // Récupération de l'utilisateur\n    getUser() {\n      let local = JSON.parse(localStorage.user);\n      let userId = local.userId;\n      let token = local.token;\n\n      axios\n        .get(\"http://localhost:3000/auth/\" + userId, {\n          headers: {\n            Authorization: \"Bearer \" + token,\n          },\n        })\n        .then((res) => {\n          this.user = res.data;\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n        });\n    },\n  },\n  created() {\n    this.getUser();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.accountCont {\n  width: 95%;\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n}\n.infoUser {\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  width: 40%;\n}\n\n.bio {\n  width: 100%;\n  font-weight: lighter;\n}\n\n.userPict {\n  width: 180px;\n  height: 180px;\n  background-position: center;\n  background-size: cover;\n  border: 1px solid rgb(61, 66, 66);\n  border-radius: 50%;\n  margin: 20px 0px 20px 0px;\n}\n\n.formUpdate {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n.formDiv {\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  margin: 15px;\n  padding: 10px;\n  border: 1px solid rgb(199, 199, 199);\n  border-radius: 10px;\n}\n\nh2 {\n  display: flex;\n  justify-content: center;\n  margin: 10px 0px 10px 0px;\n}\n\nh3 {\n  margin: 10px 0px;\n  border-bottom: 2px solid #ffd7d7;\n}\n\nlabel {\n  font-weight: bold;\n  margin: 10px;\n}\ninput {\n  margin: 10px;\n  border-radius: 5px;\n  border: 1px solid rgb(199, 199, 199);\n}\ntextarea {\n  height: 80px;\n  border: 1px solid darkslategray;\n}\n\n.formBtn {\n  margin: 10px;\n  padding: 10px;\n  background-color: rgb(109, 182, 109);\n  border: 1px solid rgb(109, 182, 109);\n  border-radius: 15px;\n  color: white;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n    transition: 0.8s;\n  }\n}\n\n.btnDelete {\n  margin: 30px;\n  padding: 20px;\n  background-color: rgb(253, 106, 106);\n  border: 1px solid rgb(253, 106, 106);\n  color: white;\n  cursor: pointer;\n  border-radius: 15px;\n\n  &:hover {\n    transform: scale(1.05);\n    transition: 0.8s;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}