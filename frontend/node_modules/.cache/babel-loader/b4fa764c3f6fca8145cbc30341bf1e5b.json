{"ast":null,"code":"import \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"App\",\n  data: function data() {\n    return {\n      user: {},\n      newUser: {\n        email: \"\",\n        password: \"\",\n        cPassword: \"\",\n        bio: \"\",\n        image: \"\"\n      }\n    };\n  },\n  methods: {\n    exitSession: function exitSession() {\n      this.$router.push(\"/\");\n      localStorage.clear();\n    },\n    returnMain: function returnMain() {\n      this.$router.push(\"/main\");\n    },\n    // Selection d'une Image pour l'avatar\n    fileSelected: function fileSelected(e) {\n      this.newUser.image = e.target.files[0];\n      console.log(this.newUser.image);\n      console.log(this.currentUser.id);\n    },\n    // Mise à jour de l'image de Profil\n    updateAvatar: function updateAvatar() {\n      if (this.newUser.image !== \"\") {\n        var userId = this.currentUser.userId;\n        var formData = new FormData();\n        formData.append(\"image\", this.newUser.image);\n        axios.put(\"http://localhost:3000/api/users/\".concat(userId), formData, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + this.currentUser.token\n          }\n        }).then(function (res) {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification image réussie\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: function willClose() {\n              location.reload();\n            }\n          });\n        }).catch(function (error) {\n          console.log(error.response.data.error);\n        });\n      } else {\n        alert(\"Choisissez une image !\");\n      }\n    },\n    // Mise à jour de l'email\n    updateEmail: function updateEmail() {\n      var regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n\n      if (regexName.test(this.newUser.email)) {\n        var userId = this.currentUser.userId;\n        axios.put(\"http://localhost:3000/auth/\".concat(userId), {\n          email: this.newUser.email\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + this.currentUser.token\n          }\n        }).then(function (res) {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification de l'adresse Email réussie !\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: function willClose() {\n              location.reload();\n            }\n          });\n        }).catch(function (error) {\n          console.log(error.response.data.error);\n        });\n      } else {\n        alert(\"Entrez une adresse mail valide\");\n      }\n    },\n    // Mise à jour du password\n    updatePass: function updatePass() {\n      var regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n\n      if (regexName.test(this.newUser.password && this.newUser.cPassword)) {\n        if (this.newUser.password === this.newUser.cPassword) {\n          var userId = this.currentUser.userId;\n          axios.put(\"http://localhost:3000/auth/\".concat(userId), {\n            password: this.newUser.password\n          }, {\n            headers: {\n              Authorization: \"Bearer \" + this.currentUser.token\n            }\n          }).then(function (res) {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification du Mot de passe réussi !\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: function willClose() {\n                location.reload();\n              }\n            });\n          }).catch(function (error) {\n            console.log(error.response.data.error);\n          });\n        } else {\n          alert(\"Mot de passe non confirmé\");\n        }\n      } else {\n        alert(\"Mot de passe incorrect\");\n      }\n    },\n    // Mise à jour de la biographie\n    updateBio: function updateBio() {\n      if (this.newUser.bio != \"\") {\n        var userId = this.currentUser.userId;\n        axios.put(\"http://localhost:3000/auth/\".concat(userId), {\n          bio: this.newUser.bio\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + this.currentUser.token\n          }\n        }).then(function (res) {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification de la bio réussie\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: function willClose() {\n              location.reload();\n            }\n          });\n        }).catch(function (error) {\n          console.log(error.response.data.error);\n        });\n      } else {\n        alert(\"Ecrire dans la bio\");\n      }\n    },\n    // Suppression de l'utilisateur\n    deleteUser: function deleteUser() {\n      var userId = this.currentUser.userId;\n      axios.delete(\"http://localhost:3000/auth/\".concat(userId), {\n        headers: {\n          Authorization: \"Bearer \" + this.currentUser.token\n        }\n      }).then(function (res) {\n        console.log(res);\n        localStorage.removeItem(\"connectedUser\");\n        Swal.fire({\n          text: \"Compte supprimé\",\n          footer: \"Redirection en cours...\",\n          icon: \"success\",\n          timer: 1000,\n          showConfirmButton: false,\n          timerProgressBar: true,\n          willClose: function willClose() {\n            location.reload();\n          }\n        });\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    },\n    // Récupération de l'utilisateur\n    getUser: function getUser() {\n      var _this = this;\n\n      var local = JSON.parse(localStorage.user);\n      var userId = local.userId;\n      var token = local.token;\n      axios.get(\"http://localhost:3000/auth/\" + userId, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(function (res) {\n        _this.user = res.data;\n        console.log(_this.user);\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    }\n  },\n  created: function created() {\n    this.getUser();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AAEA;AACAA,aADA;AAGAC,MAHA,kBAGA;AACA;AACAC,cADA;AAEAC;AACAC,iBADA;AAEAC,oBAFA;AAGAC,qBAHA;AAIAC,eAJA;AAKAC;AALA;AAFA;AAUA,GAdA;AAgBAC;AAEAC,eAFA,yBAEA;AACA;AACAC;AACA,KALA;AAMAC,cANA,wBAMA;AACA;AACA,KARA;AASA;AACAC,gBAVA,wBAUAC,CAVA,EAUA;AACA;AACAC;AACAA;AACA,KAdA;AAeA;AACAC,gBAhBA,0BAgBA;AACA;AACA;AACA;AACAC;AACAC,cACAC,GADA,2CACAC,MADA,GACAH,QADA,EACA;AACAI;AACA,iDADA;AAEAC;AAFA;AADA,SADA,EAOAC,IAPA,CAOA;AACAR;AACAS;AACAC,8CADA;AAEAC,6CAFA;AAGAC,2BAHA;AAIAC,uBAJA;AAKAC,oCALA;AAMAC,kCANA;AAOAC;AACAC;AACA;AATA;AAWA,SApBA,EAqBAC,KArBA,CAqBA;AACAlB;AACA,SAvBA;AAwBA,OA5BA,MA4BA;AACAmB;AACA;AACA,KAhDA;AAiDA;AACAC,eAlDA,yBAkDA;AACA;;AACA;AACA;AACAjB,cACAC,GADA,sCAEAC,MAFA,GAGA;AAAAhB;AAAA,SAHA,EAIA;AACAiB;AACAC;AADA;AADA,SAJA,EAUAC,IAVA,CAUA;AACAR;AACAS;AACAC,6DADA;AAEAC,6CAFA;AAGAC,2BAHA;AAIAC,uBAJA;AAKAC,oCALA;AAMAC,kCANA;AAOAC;AACAC;AACA;AATA;AAWA,SAvBA,EAwBAC,KAxBA,CAwBA;AACAlB;AACA,SA1BA;AA2BA,OA7BA,MA6BA;AACAmB;AACA;AACA,KApFA;AAqFA;AACAE,cAtFA,wBAsFA;AACA;;AACA;AACA;AACA;AACAlB,gBACAC,GADA,sCAEAC,MAFA,GAGA;AAAAf;AAAA,WAHA,EAIA;AACAgB;AACAC;AADA;AADA,WAJA,EAUAC,IAVA,CAUA;AACAR;AACAS;AACAC,2DADA;AAEAC,+CAFA;AAGAC,6BAHA;AAIAC,yBAJA;AAKAC,sCALA;AAMAC,oCANA;AAOAC;AACAC;AACA;AATA;AAWA,WAvBA,EAwBAC,KAxBA,CAwBA;AACAlB;AACA,WA1BA;AA2BA,SA7BA,MA6BA;AACAmB;AACA;AACA,OAjCA,MAiCA;AACAA;AACA;AACA,KA5HA;AA6HA;AACAG,aA9HA,uBA8HA;AACA;AACA;AACAnB,cACAC,GADA,sCAEAC,MAFA,GAGA;AAAAb;AAAA,SAHA,EAIA;AACAc;AACAC;AADA;AADA,SAJA,EAUAC,IAVA,CAUA;AACAR;AACAS;AACAC,kDADA;AAEAC,6CAFA;AAGAC,2BAHA;AAIAC,uBAJA;AAKAC,oCALA;AAMAC,kCANA;AAOAC;AACAC;AACA;AATA;AAWA,SAvBA,EAwBAC,KAxBA,CAwBA;AACAlB;AACA,SA1BA;AA2BA,OA7BA,MA6BA;AACAmB;AACA;AACA,KA/JA;AAgKA;AACAI,cAjKA,wBAiKA;AACA;AACApB,YACAqB,MADA,sCACAnB,MADA,GACA;AACAC;AACAC;AADA;AADA,OADA,EAMAC,IANA,CAMA;AACAR;AACAJ;AACAa;AACAC,iCADA;AAEAC,2CAFA;AAGAC,yBAHA;AAIAC,qBAJA;AAKAC,kCALA;AAMAC,gCANA;AAOAC;AACAC;AACA;AATA;AAWA,OApBA,EAqBAC,KArBA,CAqBA;AACAlB;AACA,OAvBA;AAwBA,KA3LA;AA4LA;AACAyB,WA7LA,qBA6LA;AAAA;;AACA;AACA;AACA;AAEAtB,YACAuB,GADA,CACA,sCADA,EACA;AACApB;AACAC;AADA;AADA,OADA,EAMAC,IANA,CAMA;AACA;AACAR;AACA,OATA,EAUAkB,KAVA,CAUA;AACAlB;AACA,OAZA;AAaA;AA/MA,GAhBA;AAiOA2B,SAjOA,qBAiOA;AACA;AACA;AAnOA","names":["name","data","user","newUser","email","password","cPassword","bio","image","methods","exitSession","localStorage","returnMain","fileSelected","e","console","updateAvatar","formData","axios","put","userId","headers","Authorization","then","Swal","text","footer","icon","timer","showConfirmButton","timerProgressBar","willClose","location","catch","alert","updateEmail","updatePass","updateBio","deleteUser","delete","getUser","get","created"],"sourceRoot":"src/views","sources":["AccountView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-card width=\"100%\" max-width=\"800\" class=\"mx-auto overflow-hidden\">\n      <v-app-bar color=\"red lighten-4\">\n        <v-btn @click=\"returnMain\" class=\"ma-2\" color=\"red lighten-3\" dark>\n          Fil d'actu\n          <v-icon dark right> mdi-chat-processing </v-icon>\n        </v-btn>\n        <v-spacer></v-spacer>\n        <v-toolbar-title>Mon compte</v-toolbar-title>\n        <v-spacer></v-spacer>\n\n        <v-btn @click=\"exitSession\" class=\"ma-2\" color=\"red lighten-3\" dark>\n          Quitter\n          <v-icon dark right> mdi-cancel </v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <div class=\"accountCont\">\n        <div\n          class=\"userPict\"\n          :style=\"{ backgroundImage: 'url(' + this.user.avatar + ')' }\"\n        ></div>\n        <div class=\"infoUser\">\n          <h3>Nom : {{ this.user.prenom }}</h3>\n          <h3>email : {{ this.user.email }}</h3>\n          <div class=\"bio\">\n            <h3>Ma bio :</h3>\n            <p>{{ this.user.bio }}</p>\n          </div>\n        </div>\n        <div class=\"update\">\n          <h2>Modifier ses informations :</h2>\n          <form class=\"formUpdate\">\n            <div class=\"formDiv\">\n              <label for=\"mEmail\">Modifier l'adresse email</label>\n              <input\n                type=\"text\"\n                name=\"mEmail\"\n                id=\"mEmail\"\n                placeholder=\"Adresse mail valide\"\n                v-model=\"this.newUser.email\"\n              />\n              <button class=\"formBtn\" @click.prevent=\"this.updateEmail()\">\n                Modifier\n              </button>\n            </div>\n\n            <div class=\"formDiv\">\n              <label for=\"mPassword\">Modifier le mot de passe </label>\n              <input\n                type=\"password\"\n                name=\"mPassword\"\n                id=\"mPassword\"\n                placeholder=\"6 caractères minimum\"\n                v-model=\"this.newUser.password\"\n              />\n              <label for=\"cPassword\">Confirmer le mot de passe</label>\n              <input\n                type=\"password\"\n                name=\"cPassword\"\n                id=\"cPassword\"\n                placeholder=\"6 caractères minimum\"\n                v-model=\"this.newUser.cPassword\"\n              />\n              <button class=\"formBtn\" @click.prevent=\"this.updatePass()\">\n                Modifier\n              </button>\n            </div>\n\n            <div class=\"formDiv\">\n              <label for=\"upAvatar\">Modifier avatar</label>\n              <input\n                type=\"file\"\n                name=\"upAvatar\"\n                id=\"upAvatar\"\n                @change=\"fileSelected\"\n              />\n              <button class=\"formBtn\" @click.prevent=\"this.updateAvatar()\">\n                Modifier\n              </button>\n            </div>\n\n            <div class=\"formDiv\">\n              <label for=\"mBio\">Modifier la biographie</label>\n              <textarea\n                name=\"mBio\"\n                id=\"mBio\"\n                v-model=\"this.newUser.bio\"\n              ></textarea>\n              <button class=\"formBtn\" @click.prevent=\"this.updateBio()\">\n                Modifier\n              </button>\n            </div>\n          </form>\n        </div>\n        <button class=\"btnDelete\" @click.prevent=\"deleteUser()\">\n          Supprimer Compte\n        </button>\n      </div>\n    </v-card>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  name: \"App\",\n\n  data() {\n    return {\n      user: {},\n      newUser: {\n        email: \"\",\n        password: \"\",\n        cPassword: \"\",\n        bio: \"\",\n        image: \"\",\n      },\n    };\n  },\n\n  methods: {\n\n    exitSession() {\n      this.$router.push(\"/\");\n      localStorage.clear();\n    },\n    returnMain() {\n      this.$router.push(\"/main\");\n    },\n    // Selection d'une Image pour l'avatar\n    fileSelected(e) {\n      this.newUser.image = e.target.files[0];\n      console.log(this.newUser.image);\n      console.log(this.currentUser.id);\n    },\n    // Mise à jour de l'image de Profil\n    updateAvatar() {\n      if (this.newUser.image !== \"\") {\n        const userId = this.currentUser.userId;\n        const formData = new FormData();\n        formData.append(\"image\", this.newUser.image);\n        axios\n          .put(`http://localhost:3000/api/users/${userId}`, formData, {\n            headers: {\n              \"content-type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + this.currentUser.token,\n            },\n          })\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification image réussie\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n      } else {\n        alert(\"Choisissez une image !\");\n      }\n    },\n    // Mise à jour de l'email\n    updateEmail() {\n      const regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n      if (regexName.test(this.newUser.email)) {\n        const userId = this.currentUser.userId;\n        axios\n          .put(\n            `http://localhost:3000/auth/${userId}`,\n            { email: this.newUser.email },\n            {\n              headers: {\n                Authorization: \"Bearer \" + this.currentUser.token,\n              },\n            }\n          )\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification de l'adresse Email réussie !\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n      } else {\n        alert(\"Entrez une adresse mail valide\");\n      }\n    },\n    // Mise à jour du password\n    updatePass() {\n      const regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n      if (regexName.test(this.newUser.password && this.newUser.cPassword)) {\n        if (this.newUser.password === this.newUser.cPassword) {\n          const userId = this.currentUser.userId;\n          axios\n            .put(\n              `http://localhost:3000/auth/${userId}`,\n              { password: this.newUser.password },\n              {\n                headers: {\n                  Authorization: \"Bearer \" + this.currentUser.token,\n                },\n              }\n            )\n            .then((res) => {\n              console.log(res.data);\n              Swal.fire({\n                text: \"Modification du Mot de passe réussi !\",\n                footer: \"Redirection en cours...\",\n                icon: \"success\",\n                timer: 1000,\n                showConfirmButton: false,\n                timerProgressBar: true,\n                willClose: () => {\n                  location.reload();\n                },\n              });\n            })\n            .catch((error) => {\n              console.log(error.response.data.error);\n            });\n        } else {\n          alert(\"Mot de passe non confirmé\");\n        }\n      } else {\n        alert(\"Mot de passe incorrect\");\n      }\n    },\n    // Mise à jour de la biographie\n    updateBio() {\n      if (this.newUser.bio != \"\") {\n        const userId = this.currentUser.userId;\n        axios\n          .put(\n            `http://localhost:3000/auth/${userId}`,\n            { bio: this.newUser.bio },\n            {\n              headers: {\n                Authorization: \"Bearer \" + this.currentUser.token,\n              },\n            }\n          )\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification de la bio réussie\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n      } else {\n        alert(\"Ecrire dans la bio\");\n      }\n    },\n    // Suppression de l'utilisateur\n    deleteUser() {\n      const userId = this.currentUser.userId;\n      axios\n        .delete(`http://localhost:3000/auth/${userId}`, {\n          headers: {\n            Authorization: \"Bearer \" + this.currentUser.token,\n          },\n        })\n        .then((res) => {\n          console.log(res);\n          localStorage.removeItem(\"connectedUser\");\n          Swal.fire({\n            text: \"Compte supprimé\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: () => {\n              location.reload();\n            },\n          });\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n        });\n    },\n    // Récupération de l'utilisateur\n    getUser() {\n      let local = JSON.parse(localStorage.user);\n      let userId = local.userId;\n      let token = local.token;\n\n      axios\n        .get(\"http://localhost:3000/auth/\"+ userId, {\n          headers: {\n            Authorization: \"Bearer \" + token,\n          },\n        })\n        .then((res) => {\n          this.user = res.data;\n          console.log(this.user);\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n        });\n    },\n  },\n  created() {\n    this.getUser();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.accountCont {\n  width: 95%;\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n}\n.infoUser {\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  width: 40%;\n}\n\n.bio {\n  width: 40%;\n}\n\n.userPict {\n  width: 180px;\n  height: 180px;\n  background-position: center;\n  background-size: cover;\n  border: 1px solid rgb(61, 66, 66);\n  border-radius: 50%;\n  margin: 20px 0px 20px 0px;\n}\n\n.formUpdate {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n.formDiv {\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  margin: 15px;\n  padding: 10px;\n  border: 1px solid rgb(199, 199, 199);\n  border-radius: 10px;\n}\n\nh2 {\n  display: flex;\n  justify-content: center;\n  margin: 10px 0px 10px 0px;\n}\n\nlabel {\n  font-weight: bold;\n  margin: 10px;\n}\ninput {\n  margin: 10px;\n  border-radius: 5px;\n  border: 1px solid rgb(199, 199, 199);\n}\ntextarea {\n  height: 80px;\n  border: 1px solid darkslategray;\n}\n\n.formBtn {\n  margin: 10px;\n  padding: 10px;\n  background-color: rgb(109, 182, 109);\n  border: 1px solid rgb(109, 182, 109);\n  border-radius: 15px;\n  color: white;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n    transition: 0.8s;\n  }\n}\n\n.btnDelete {\n  margin: 30px;\n  padding: 30px;\n  background-color: rgb(253, 106, 106);\n  border: 1px solid rgb(253, 106, 106);\n  color: white;\n  cursor: pointer;\n  border-radius: 15px;\n\n  &:hover {\n    transform: scale(1.05);\n    transition: 0.8s;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}