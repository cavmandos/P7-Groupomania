{"ast":null,"code":"import \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"App\",\n  data: function data() {\n    return {\n      user: {},\n      newUser: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        cPassword: \"\",\n        bio: \"\",\n        image: \"\"\n      }\n    };\n  },\n  methods: {\n    exitSession: function exitSession() {\n      this.$router.push(\"/\");\n      localStorage.clear();\n    },\n    returnMain: function returnMain() {\n      this.$router.push(\"/main\");\n    },\n    // Selection d'une Image pour l'avatar\n    fileSelected: function fileSelected(e) {\n      this.newUser.image = e.target.files[0];\n      console.log(this.newUser.image);\n      console.log(this.currentUser.id);\n    },\n    // Mise à jour de l'image de Profil \n    updateAvatar: function updateAvatar() {\n      if (this.newUser.image !== \"\") {\n        var userId = this.currentUser.userId;\n        var formData = new FormData();\n        formData.append(\"image\", this.newUser.image);\n        axios.put(\"http://localhost:3000/api/users/\".concat(userId), formData, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + this.currentUser.token\n          }\n        }).then(function (res) {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification image réussie !\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: function willClose() {\n              location.reload();\n            }\n          });\n        }).catch(function (error) {\n          console.log(error.response.data.error);\n        });\n      } else {\n        alert(\"Choisissez une image !\");\n      }\n    },\n    // Mise à jour de l'username\n    updateUsername: function updateUsername() {\n      var regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n\n      if (regexName.test(this.newUser.username)) {\n        var userId = this.currentUser.userId;\n        axios.put(\"http://localhost:3000/api/users/\".concat(userId), {\n          username: this.newUser.username\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + this.currentUser.token\n          }\n        }).then(function (res) {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification Nom d'Utilisateur réussi !\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: function willClose() {\n              location.reload();\n            }\n          });\n        }).catch(function (error) {\n          console.log(error.response.data.error);\n        });\n      } else {\n        alert(\"Entrez un nouveau Nom d'utilisateur !\");\n      }\n    },\n    // Mise à jour de l'email \n    updateEmail: function updateEmail() {\n      var regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n\n      if (regexName.test(this.newUser.email)) {\n        var userId = this.currentUser.userId;\n        axios.put(\"http://localhost:3000/api/users/\".concat(userId), {\n          email: this.newUser.email\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + this.currentUser.token\n          }\n        }).then(function (res) {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification de l'adresse Email réussie !\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: function willClose() {\n              location.reload();\n            }\n          });\n        }).catch(function (error) {\n          console.log(error.response.data.error);\n        });\n      } else {\n        alert(\"Entrez une adresse mail valide !\");\n      }\n    },\n    // Mise à jour du password\n    updatePass: function updatePass() {\n      var regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n\n      if (regexName.test(this.newUser.password && this.newUser.cPassword)) {\n        if (this.newUser.password === this.newUser.cPassword) {\n          var userId = this.currentUser.userId;\n          axios.put(\"http://localhost:3000/api/users/\".concat(userId), {\n            password: this.newUser.password\n          }, {\n            headers: {\n              Authorization: \"Bearer \" + this.currentUser.token\n            }\n          }).then(function (res) {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification du Mot de passe réussi !\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: function willClose() {\n                location.reload();\n              }\n            });\n          }).catch(function (error) {\n            console.log(error.response.data.error);\n          });\n        } else {\n          alert(\"Mot de passe non confirmé !\");\n        }\n      } else {\n        alert(\"Mot de passe incorrecte !\");\n      }\n    },\n    // Mise à jour de la biographie\n    updateBio: function updateBio() {\n      if (this.newUser.bio != '') {\n        var userId = this.currentUser.userId;\n        axios.put(\"http://localhost:3000/api/users/\".concat(userId), {\n          bio: this.newUser.bio\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + this.currentUser.token\n          }\n        }).then(function (res) {\n          console.log(res.data);\n          Swal.fire({\n            text: \"Modification de la Biographie réussie !\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: function willClose() {\n              location.reload();\n            }\n          });\n        }).catch(function (error) {\n          console.log(error.response.data.error);\n        });\n      } else {\n        alert(\"Ecrire quelque chose !\");\n      }\n    },\n    // Suppression de l'utilisateur \n    deleteUser: function deleteUser() {\n      var userId = this.currentUser.userId;\n      axios.delete(\"http://localhost:3000/api/users/\".concat(userId), {\n        headers: {\n          Authorization: \"Bearer \" + this.currentUser.token\n        }\n      }).then(function (res) {\n        console.log(res);\n        localStorage.removeItem(\"connectedUser\");\n        Swal.fire({\n          text: \"Compte supprimé !\",\n          footer: \"Redirection en cours...\",\n          icon: \"success\",\n          timer: 1000,\n          showConfirmButton: false,\n          timerProgressBar: true,\n          willClose: function willClose() {\n            location.reload();\n          }\n        });\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    },\n    // Récupération de l'utilisateur \n    getUser: function getUser() {\n      var _this = this;\n\n      var userId = this.currentUser.userId;\n      axios.get(\"http://localhost:3000/api/users/\".concat(userId), {\n        headers: {\n          Authorization: \"Bearer \" + this.currentUser.token\n        }\n      }).then(function (res) {\n        _this.user = res.data;\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n      });\n    }\n  },\n  created: function created() {\n    this.getUser();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AAEA;AACAA,aADA;AAGAC,MAHA,kBAGA;AACA;AACAC,cADA;AAEAC;AACAC,oBADA;AAEAC,iBAFA;AAGAC,oBAHA;AAIAC,qBAJA;AAKAC,eALA;AAMAC;AANA;AAFA;AAWA,GAfA;AAiBAC;AACAC,eADA,yBACA;AACA;AACAC;AACA,KAJA;AAKAC,cALA,wBAKA;AACA;AACA,KAPA;AAQA;AACAC,gBATA,wBASAC,CATA,EASA;AACA;AACAC;AACAA;AACA,KAbA;AAcA;AACAC,gBAfA,0BAeA;AACA;AACA;AACA;AACAC;AACAC,cACAC,GADA,2CACAC,MADA,GACAH,QADA,EACA;AACAI;AACA,iDADA;AAEAC;AAFA;AADA,SADA,EAOAC,IAPA,CAOA;AACAR;AACAS;AACAC,gDADA;AAEAC,6CAFA;AAGAC,2BAHA;AAIAC,uBAJA;AAKAC,oCALA;AAMAC,kCANA;AAOAC;AACAC;AACA;AATA;AAWA,SApBA,EAqBAC,KArBA,CAqBA;AACAlB;AACA,SAvBA;AAwBA,OA5BA,MA4BA;AACAmB;AACA;AACA,KA/CA;AAgDA;AACAC,kBAjDA,4BAiDA;AACA;;AACA;AACA;AACAjB,cACAC,GADA,2CACAC,MADA,GACA;AAAAjB;AAAA,SADA,EACA;AACAkB;AACAC;AADA;AADA,SADA,EAMAC,IANA,CAMA;AACAR;AACAS;AACAC,2DADA;AAEAC,6CAFA;AAGAC,2BAHA;AAIAC,uBAJA;AAKAC,oCALA;AAMAC,kCANA;AAOAC;AACAC;AACA;AATA;AAWA,SAnBA,EAoBAC,KApBA,CAoBA;AACAlB;AACA,SAtBA;AAuBA,OAzBA,MAyBA;AACAmB;AACA;AACA,KA/EA;AAgFA;AACAE,eAjFA,yBAiFA;AACA;;AACA;AACA;AACAlB,cACAC,GADA,2CACAC,MADA,GACA;AAAAhB;AAAA,SADA,EACA;AACAiB;AACAC;AADA;AADA,SADA,EAMAC,IANA,CAMA;AACAR;AACAS;AACAC,6DADA;AAEAC,6CAFA;AAGAC,2BAHA;AAIAC,uBAJA;AAKAC,oCALA;AAMAC,kCANA;AAOAC;AACAC;AACA;AATA;AAWA,SAnBA,EAoBAC,KApBA,CAoBA;AACAlB;AACA,SAtBA;AAuBA,OAzBA,MAyBA;AACAmB;AACA;AACA,KA/GA;AAgHA;AACAG,cAjHA,wBAiHA;AACA;;AACA;AACA;AACA;AACAnB,gBACAC,GADA,2CACAC,MADA,GACA;AAAAf;AAAA,WADA,EACA;AACAgB;AACAC;AADA;AADA,WADA,EAMAC,IANA,CAMA;AACAR;AACAS;AACAC,2DADA;AAEAC,+CAFA;AAGAC,6BAHA;AAIAC,yBAJA;AAKAC,sCALA;AAMAC,oCANA;AAOAC;AACAC;AACA;AATA;AAWA,WAnBA,EAoBAC,KApBA,CAoBA;AACAlB;AACA,WAtBA;AAuBA,SAzBA,MAyBA;AACAmB;AACA;AACA,OA7BA,MA6BA;AACAA;AACA;AACA,KAnJA;AAoJA;AACAI,aArJA,uBAqJA;AACA;AACA;AACApB,cACAC,GADA,2CACAC,MADA,GACA;AAAAb;AAAA,SADA,EACA;AACAc;AACAC;AADA;AADA,SADA,EAMAC,IANA,CAMA;AACAR;AACAS;AACAC,2DADA;AAEAC,6CAFA;AAGAC,2BAHA;AAIAC,uBAJA;AAKAC,oCALA;AAMAC,kCANA;AAOAC;AACAC;AACA;AATA;AAWA,SAnBA,EAoBAC,KApBA,CAoBA;AACAlB;AACA,SAtBA;AAuBA,OAzBA,MAyBA;AACAmB;AACA;AACA,KAlLA;AAmLA;AACAK,cApLA,wBAoLA;AACA;AACArB,YACAsB,MADA,2CACApB,MADA,GACA;AACAC;AACAC;AADA;AADA,OADA,EAMAC,IANA,CAMA;AACAR;AACAJ;AACAa;AACAC,mCADA;AAEAC,2CAFA;AAGAC,yBAHA;AAIAC,qBAJA;AAKAC,kCALA;AAMAC,gCANA;AAOAC;AACAC;AACA;AATA;AAWA,OApBA,EAqBAC,KArBA,CAqBA;AACAlB;AACA,OAvBA;AAwBA,KA9MA;AA+MA;AACA0B,WAhNA,qBAgNA;AAAA;;AACA;AACAvB;AACAG;AACAC;AADA;AADA,SAKAC,IALA,CAKA;AACA;AACA,OAPA,EAQAU,KARA,CAQA;AACAlB;AACA,OAVA;AAWA;AA7NA,GAjBA;AAgPA2B,SAhPA,qBAgPA;AACA;AACA;AAlPA","names":["name","data","user","newUser","username","email","password","cPassword","bio","image","methods","exitSession","localStorage","returnMain","fileSelected","e","console","updateAvatar","formData","axios","put","userId","headers","Authorization","then","Swal","text","footer","icon","timer","showConfirmButton","timerProgressBar","willClose","location","catch","alert","updateUsername","updateEmail","updatePass","updateBio","deleteUser","delete","getUser","created"],"sourceRoot":"src/views","sources":["AccountView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-card width=\"100%\" max-width=\"800\" class=\"mx-auto overflow-hidden\">\n      <v-app-bar color=\"red lighten-4\">\n        <v-btn @click=\"returnMain\" class=\"ma-2\" color=\"red lighten-3\" dark>\n          Fil d'actu\n          <v-icon dark right> mdi-chat-processing </v-icon>\n        </v-btn>\n        <v-spacer></v-spacer>\n        <v-toolbar-title>Mon compte</v-toolbar-title>\n        <v-spacer></v-spacer>\n\n        <v-btn @click=\"exitSession\" class=\"ma-2\" color=\"red lighten-3\" dark>\n          Quitter\n          <v-icon dark right> mdi-cancel </v-icon>\n        </v-btn>\n      </v-app-bar>\n\n        <div class=\"profilEdit\">\n    <div class=\"infoUser\">\n      <div\n        class=\"userAvatar\"\n        :style=\"{ backgroundImage: 'url(' + this.user.avatar + ')' }\"\n      ></div>\n      <h3>Nom  : {{ this.user.username }}</h3>\n      <h3>Mail : {{ this.user.email }}</h3>\n      <div class=\"bio\">\n        <h3>A Propos de moi :</h3>\n        <p> {{this.user.bio}} </p>\n      </div>\n    </div>\n    <div class=\"Update\">\n      <h2>Modifier informations :</h2>\n      <form class=\"formUpdate\">\n\n        <div class=\"formDiv\">\n          <label for=\"mUsername\">Modifier Nom d'utilisateur</label>\n          <input type=\"text\" name=\"mUsername\" id=\"mUsername\" placeholder=\"5 caractères minimum\" v-model=\"this.newUser.username\">\n          <button class=\"formBtn\" @click.prevent=\"this.updateUsername()\"> Modifier </button>\n        </div>\n\n        <div class=\"formDiv\">\n          <label for=\"mEmail\">Modifier l'adresse Email</label>\n          <input type=\"text\" name=\"mEmail\" id=\"mEmail\" placeholder=\"Adresse mail valide\" v-model=\"this.newUser.email\">\n          <button class=\"formBtn\" @click.prevent=\"this.updateEmail()\"> Modifier </button>\n        </div>\n\n        <div class=\"formDiv\">\n          <label for=\"mPassword\">Modifier le mot de passe </label>\n          <input type=\"password\" name=\"mPassword\" id=\"mPassword\" placeholder=\"5 caractères minimum\" v-model=\"this.newUser.password\">\n          <label for=\"cPassword\">Confirmer le mot de passe</label>\n          <input type=\"password\" name=\"cPassword\" id=\"cPassword\" placeholder=\"5 caractères minimum\" v-model=\"this.newUser.cPassword\">\n          <button class=\"formBtn\" @click.prevent=\"this.updatePass()\"> Modifier </button>\n        </div>\n\n        <div class=\"formDiv\">\n          <label for=\"upAvatar\">Modifier avatar</label>\n          <input type=\"file\" name=\"upAvatar\" id=\"upAvatar\" @change=\"fileSelected\"/>\n          <button class=\"formBtn\" @click.prevent=\"this.updateAvatar()\"> Modifier </button>\n        </div>\n\n        <div class=\"formDiv\">\n          <label for=\"mBio\">Modifier la biographie</label>\n          <!-- <input type=\"text\" name=\"mEmail\" id=\"mEmail\" placeholder=\"Adresse mail valide\" v-model=\"this.newUser.email\"> -->\n          <textarea name=\"mBio\" id=\"mBio\" v-model=\"this.newUser.bio\"></textarea>\n          <button class=\"formBtn\" @click.prevent=\"this.updateBio()\"> Modifier </button>\n        </div>\n      </form>\n    </div>\n    \n  </div>\n  <button class=\"btnDelete\" @click.prevent=\"deleteUser()\">\n    Supprimer Compte\n  </button>\n\n    </v-card>\n  </v-app>\n\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  name: \"App\",\n\n  data() {\n    return {\n      user: {},\n      newUser: {\n        username: \"\",\n        email:\"\",\n        password: \"\",\n        cPassword: \"\",\n        bio: \"\",\n        image: \"\"\n      },\n    };\n  },\n\n  methods: {\n    exitSession() {\n      this.$router.push(\"/\");\n      localStorage.clear();\n    },\n    returnMain() {\n      this.$router.push(\"/main\");\n    },\n    // Selection d'une Image pour l'avatar\n    fileSelected(e) {\n      this.newUser.image = e.target.files[0];\n      console.log(this.newUser.image);\n      console.log(this.currentUser.id);\n    },\n    // Mise à jour de l'image de Profil \n    updateAvatar() {\n      if (this.newUser.image !== \"\") {\n        const userId = this.currentUser.userId;\n        const formData = new FormData();\n        formData.append(\"image\", this.newUser.image);\n        axios\n          .put(`http://localhost:3000/api/users/${userId}`, formData, {\n            headers: {\n              \"content-type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + this.currentUser.token,\n            },\n          })\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification image réussie !\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n      } else {\n        alert(\"Choisissez une image !\");\n      }\n    },\n    // Mise à jour de l'username\n    updateUsername() {\n      const regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n      if (regexName.test(this.newUser.username)) {\n        const userId = this.currentUser.userId;\n        axios\n          .put(`http://localhost:3000/api/users/${userId}`, {username: this.newUser.username}, {\n            headers: {\n              Authorization: \"Bearer \" + this.currentUser.token,\n            },\n          })\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification Nom d'Utilisateur réussi !\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n      } else {\n        alert(\"Entrez un nouveau Nom d'utilisateur !\");\n      }\n    },\n    // Mise à jour de l'email \n    updateEmail() {\n      const regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n      if (regexName.test(this.newUser.email)) {\n        const userId = this.currentUser.userId;\n        axios\n          .put(`http://localhost:3000/api/users/${userId}`, {email: this.newUser.email}, {\n            headers: {\n              Authorization: \"Bearer \" + this.currentUser.token,\n            },\n          })\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification de l'adresse Email réussie !\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n      } else {\n        alert(\"Entrez une adresse mail valide !\");\n      }\n    },\n    // Mise à jour du password\n    updatePass(){\n      const regexName = new RegExp(\"[A-za-z0–9_]{5,}\");\n      if (regexName.test(this.newUser.password && this.newUser.cPassword)) {\n        if (this.newUser.password === this.newUser.cPassword) {\n          const userId = this.currentUser.userId;\n        axios\n          .put(`http://localhost:3000/api/users/${userId}`, {password: this.newUser.password}, {\n            headers: {\n              Authorization: \"Bearer \" + this.currentUser.token,\n            },\n          })\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification du Mot de passe réussi !\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n        } else {\n          alert(\"Mot de passe non confirmé !\")\n        }\n      } else {\n        alert(\"Mot de passe incorrecte !\");\n      }\n    },\n    // Mise à jour de la biographie\n    updateBio() {\n      if (this.newUser.bio != '') {\n        const userId = this.currentUser.userId;\n        axios\n          .put(`http://localhost:3000/api/users/${userId}`, {bio: this.newUser.bio}, {\n            headers: {\n              Authorization: \"Bearer \" + this.currentUser.token,\n            },\n          })\n          .then((res) => {\n            console.log(res.data);\n            Swal.fire({\n              text: \"Modification de la Biographie réussie !\",\n              footer: \"Redirection en cours...\",\n              icon: \"success\",\n              timer: 1000,\n              showConfirmButton: false,\n              timerProgressBar: true,\n              willClose: () => {\n                location.reload();\n              },\n            });\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n          });\n      } else {\n        alert(\"Ecrire quelque chose !\");\n      }\n    },\n    // Suppression de l'utilisateur \n    deleteUser() {\n      const userId = this.currentUser.userId;\n      axios\n        .delete(`http://localhost:3000/api/users/${userId}`, {\n          headers: {\n            Authorization: \"Bearer \" + this.currentUser.token,\n          },\n        })\n        .then((res) => {\n          console.log(res);\n          localStorage.removeItem(\"connectedUser\");\n          Swal.fire({\n            text: \"Compte supprimé !\",\n            footer: \"Redirection en cours...\",\n            icon: \"success\",\n            timer: 1000,\n            showConfirmButton: false,\n            timerProgressBar: true,\n            willClose: () => {\n              location.reload();\n            },\n          });\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n        });\n    },\n    // Récupération de l'utilisateur \n    getUser() {\n      const userId = this.currentUser.userId\n      axios.get(`http://localhost:3000/api/users/${userId}`, {\n        headers: {\n        Authorization: \"Bearer \" + this.currentUser.token,\n        },\n      })\n      .then(res => {\n        this.user = res.data\n      })\n      .catch((error) => {\n      console.log(error.response.data.error);\n      });\n    }\n  },\n  created() {\n    this.getUser();\n  }\n};\n</script>\n\n<style scoped>\n.profilEdit {\n  width: 80%;\n  margin: 30px auto;\n  display: flex;\n  justify-content:space-evenly;\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0px 10px 13px -7px #000000;\n}\n.infoUser {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40%;\n}\n\n.bio {\n  width: 40%;\n}\n\n.userAvatar {\n  width: 200px;\n  height: 200px;\n  background-position: center;\n  background-size: cover;\n  border: 2px solid darkslategray;\n  border-radius: 50%;\n  margin-top: 10px;\n}\n\n.formUpdate {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n.formDiv {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  margin: 15px;\n  padding: 10px;\n  border-left: 3px solid darkslategray;\n  border-right: 3px solid darkslategray;\n  border-radius: 30%\n}\n\nlabel {\n  font-weight: bold;\n  margin: 10px;\n}\ninput {\n  margin: 10px;\n  border-radius: 5px;\n}\ntextarea {\n  height: 80px;\n  border: 1px solid darkslategray;\n}\n\n\n.formBtn {\n  margin: 10px;\n  padding: 10px;\n  background-color: green;\n  border: 1px solid green;\n  border-radius: 15px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  box-shadow: 0px 10px 13px -7px #000000;\n}\n\n.formBtn :hover {\n  transform: scale(1.05);\n  box-shadow: 0px 10px 20px -7px #000000;\n}\n\n.btnDelete {\n  margin: 30px;\n  padding: 30px;\n  background-color: rgb(253, 106, 106);\n  border: 1px solid rgb(253, 106, 106);\n  border-radius: 20px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n}\n\n.btnDelete:hover {\n  transform: scale(1.05);\n  box-shadow: 0px 10px 20px -7px #000000;\n}\n</style>"]},"metadata":{},"sourceType":"module"}