{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.from-entries.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nvar url = \"http://localhost:3000/\"; //{headers: { Authorization: 'Bearer ' + this.user.token }};\n\nexport default {\n  name: \"PostsView\",\n  components: {},\n  data: function data() {\n    return {\n      user: null,\n      profile: false,\n      loading: false,\n      posts: [],\n      comments: [],\n      activities: [],\n      postContent: \"\",\n      postFile: \"\",\n      postErr: \"\",\n      commentErr: \"\",\n      commentOK: false\n    };\n  },\n  methods: {\n    filterComments: function filterComments(idPost) {\n      // console.log('filter is called');\n      return this.comments.filter(function (comment) {\n        return comment.postId == idPost;\n      });\n    },\n    newPost: function newPost(event) {\n      var _Object$fromEntries = Object.fromEntries(new FormData(event.target)),\n          userId = _Object$fromEntries.userId,\n          content = _Object$fromEntries.content,\n          image = _Object$fromEntries.image;\n\n      this.userId = this.user.prenom;\n      this.content = content;\n      this.image = image;\n      console.log({\n        userId: userId,\n        content: content,\n        image: image\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (!localStorage.getItem(\"user\")) {\n      this.$router.push(\"/\");\n    } else {\n      this.user = JSON.parse(localStorage.getItem(\"user\")); // Get all posts\n\n      axios.get(\"\".concat(url, \"posts\")).then(function (res) {\n        _this.posts = res.data;\n      }).catch(function (err) {\n        _this.postErr = err;\n      }); // Get all comments\n\n      axios.get(\"\".concat(url, \"comments\")).then(function (res) {\n        _this.comments = res.data;\n        _this.loading = false;\n      }).catch(function (err) {\n        _this.commentErr = err;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA,mC,CACA;;AACA;AACAA,mBADA;AAEAC,gBAFA;AAGAC;AACA;AACAC,gBADA;AAEAC,oBAFA;AAGAC,oBAHA;AAIAC,eAJA;AAKAC,kBALA;AAMAC,oBANA;AAOAC,qBAPA;AAQAC,kBARA;AASAC,iBATA;AAUAC,oBAVA;AAWAC;AAXA;AAaA,GAjBA;AAkBAC;AACAC,kBADA,0BACAC,MADA,EACA;AACA;AACA;AAAA;AAAA;AACA,KAJA;AAKAC,WALA,mBAKAC,KALA,EAKA;AACA,mDACA,0BADA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AACAC;AAAAC;AAAAC;AAAAC;AAAA;AACA;AAbA,GAlBA;AAiCAC,SAjCA,qBAiCA;AAAA;;AACA;AACA;AACA,KAFA,MAEA;AACA,2DADA,CAEA;;AACAC,YACAC,GADA,WACAC,GADA,YAEAC,IAFA,CAEA;AACA;AACA,OAJA,EAKAC,KALA,CAKA;AACA;AACA,OAPA,EAHA,CAWA;;AACAJ,YACAC,GADA,WACAC,GADA,eAEAC,IAFA,CAEA;AACA;AACA;AACA,OALA,EAMAC,KANA,CAMA;AACA;AACA,OARA;AASA;AACA;AA1DA","names":["name","components","data","user","profile","loading","posts","comments","activities","postContent","postFile","postErr","commentErr","commentOK","methods","filterComments","idPost","newPost","event","console","userId","content","image","mounted","axios","get","url","then","catch"],"sourceRoot":"src/components","sources":["PostsView.vue"],"sourcesContent":["<template>\n  <v-card max-width=\"800\" class=\"mx-auto\">\n    <main class=\"activities-container\">\n      <div class=\"form-container\">\n        <v-toolbar class=\"red lighten-4\">\n          <v-toolbar-title>Créer un nouveau post</v-toolbar-title>\n        </v-toolbar>\n        <v-col md=\"6\" offset-md=\"3\">\n        <form @submit.prevent=\"newPost\">\n          <div class=\"form-group\">\n            <label for=\"content\"></label>\n            <input\n              type=\"textarea\"\n              name=\"content\"\n              id=\"content\"\n              placeholder=\"Ecrire quelque chose...\"\n              required\n              maxlength=\"250\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"file\" id=\"file-btn\">Insérez une image</label>\n            <input id=\"file\" type=\"file\" name=\"image\" />\n          </div>\n          <div class=\"form-group\">\n            <button type=\"submit\">Post</button>\n          </div>\n        </form>\n        </v-col>\n      </div>\n      <div class=\"error-msg\" v-if=\"postErr || commentErr\">\n        <p>{{ postErr }}</p>\n        <p>{{ commentErr }}</p>\n      </div>\n      <br />\n\n      \n      <section class=\"all-posts-container\">\n        <!-- 1 post -->\n        <div class=\"post-container\" v-for=\"post in posts\" :key=\"post.id\">\n          <div class=\"infos\">\n            <div class=\"author\">\n              <img src=\"\" alt=\"image du profil\" />\n              <p class=\"username\">UserID: {{ post.userId }}</p>\n            </div>\n            <p class=\"date\">{{ post.date }}</p>\n          </div>\n          <div class=\"content\">\n            <p>\n              {{ post.content }}\n            </p>\n            <!-- Try to insert img <img src=\"\" alt=\"#\" />-->\n            <div\n          class=\"postPict\" v-if=\"post.image\"\n          :style=\"{ backgroundImage: 'url(' + post.image + ')' }\"\n        ></div>\n          </div>\n          <div class=\"actions\">\n            <div class=\"owner-actions\" v-if=\"user.userId == post.userId\">\n              <i class=\"fa-solid fa-pen\"></i>\n              <i class=\"fa-solid fa-trash\"></i>\n            </div>\n            <i class=\"fa-solid fa-reply\"></i>\n          </div>\n          <!-- 1 Comment -->\n          <div\n            class=\"comment-container\"\n            v-for=\"comment in filterComments(post.id)\"\n            :key=\"comment.id\"\n          >\n            <div class=\"comment-infos\">\n              <img src=\"\" alt=\"Profile picture\" />\n              <p class=\"comment-username\">PostID: {{ comment.postId }}</p>\n              <p class=\"comment-date\">{{ comment.date }}</p>\n            </div>\n            <div class=\"comment-content\">\n              <p>\n                {{ comment.content }}\n              </p>\n            </div>\n            <div class=\"comment-actions\">\n              <div\n                class=\"comment-owner-actions\"\n                v-if=\"user.userId == comment.userId\"\n              >\n                <i class=\"fa-solid fa-pen\"></i>\n                <i class=\"fa-solid fa-trash\"></i>\n              </div>\n              <i class=\"fa-solid fa-reply\"></i>\n            </div>\n          </div>\n          <!-- End comment -->\n        </div>\n        <!-- End post -->\n      </section>\n    </main>\n  </v-card>\n</template>\n\n<script>\nimport axios from \"axios\";\nconst url = \"http://localhost:3000/\";\n//{headers: { Authorization: 'Bearer ' + this.user.token }};\nexport default {\n  name: \"PostsView\",\n  components: {},\n  data: function () {\n    return {\n      user: null,\n      profile: false,\n      loading: false,\n      posts: [],\n      comments: [],\n      activities: [],\n      postContent: \"\",\n      postFile: \"\",\n      postErr: \"\",\n      commentErr: \"\",\n      commentOK: false,\n    };\n  },\n  methods: {\n    filterComments(idPost) {\n      // console.log('filter is called');\n      return this.comments.filter((comment) => comment.postId == idPost);\n    },\n    newPost(event) {\n      const { userId, content, image } = Object.fromEntries(\n        new FormData(event.target)\n      );\n      this.userId = this.user.prenom;\n      this.content = content;\n      this.image = image;\n      console.log({ userId, content, image });\n    },\n  },\n  mounted() {\n    if (!localStorage.getItem(\"user\")) {\n      this.$router.push(\"/\");\n    } else {\n      this.user = JSON.parse(localStorage.getItem(\"user\"));\n      // Get all posts\n      axios\n        .get(`${url}posts`)\n        .then((res) => {\n          this.posts = res.data;\n        })\n        .catch((err) => {\n          this.postErr = err;\n        });\n      // Get all comments\n      axios\n        .get(`${url}comments`)\n        .then((res) => {\n          this.comments = res.data;\n          this.loading = false;\n        })\n        .catch((err) => {\n          this.commentErr = err;\n        });\n    }\n  },\n};\n</script>\n\n<style scoped>\n\nform {\n  border: 1px solid rgb(214, 214, 214);\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.postPict {\n  width: 200px;\n  height: 200px;\n  background-position: center;\n  background-size: cover;\n  border: 3px solid rgb(214, 214, 214);\n  border-radius: 5%;\n  margin: 20px 0px 20px 0px;\n}\n\n.form-group {\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 0.3rem 1.5rem;\n}\n.form-group label {\n  font-family: var(--font-2);\n  font-size: 1.1rem;\n  color: var(--white);\n  width: 100%;\n  margin-bottom: 0.3rem;\n}\n.form-group input {\n  width: 100%;\n  padding: 0.6rem;\n  background-color: #ffd7d7;\n}\n.form-group input::placeholder {\n  color: var(--primary);\n}\n#file-btn {\n  background-color: var(--white);\n  color: var(--primary);\n  width: 6rem;\n  text-align: center;\n  padding: 0.3rem;\n  cursor: pointer;\n  outline: var(--black) 1px solid;\n}\n#file {\n  display: none;\n}\n.form-group button {\n  width: 7rem;\n  align-self: center;\n  padding: 0.6rem 0;\n  cursor: pointer;\n  color: var(--white);\n  background-color: var(--secondary);\n  font-size: 1.1rem;\n  font-weight: 700;\n  transition: 0.4s;\n}\n.form-group button:hover {\n  outline: var(--white) 1px solid;\n  background-color: transparent;\n}\n.error-msg {\n  background-color: var(--red);\n  width: 60%;\n  margin: 1rem auto;\n  text-align: center;\n  color: var(--white);\n  display: none;\n}\n/*POSTS + COMMENTS*/\n.all-posts-container {\n  width: 60%;\n  margin: auto;\n}\n.infos {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem 1rem;\n  background-color: var(--white);\n  border-bottom: 1px solid var(--primary);\n  color: var(--primary);\n  font-weight: bolder;\n}\n.author {\n  display: flex;\n  align-items: center;\n}\n.infos img {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  margin-right: 0.5rem;\n}\n.content {\n  padding: 0.5rem 1rem 0 1rem;\n  background-color: white;\n}\n.content h3 {\n  font-size: 1.1rem;\n}\n.content img {\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n  margin-bottom: 0.5rem;\n}\n.content p {\n  text-align: justify;\n}\n.actions {\n  display: flex;\n  justify-content: flex-end;\n  padding: 0rem 1rem;\n  background-color: white;\n}\n.actions i {\n  font-size: 1.2rem;\n  margin: 0 0.5rem;\n  transition: 0.4s;\n  cursor: pointer;\n}\n.actions .fa-trash {\n  color: red;\n}\n.actions i:hover,\n.comment-actions i:hover {\n  opacity: 0.7;\n  transform: scale(1.2);\n}\n.comment-container {\n  padding: 1rem;\n  font-size: 0.8rem;\n}\n.comment-infos {\n  display: flex;\n  align-items: center;\n  position: relative;\n  border-bottom: 1px solid;\n}\n.comment-infos img {\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  margin-right: 1rem;\n}\n.comment-username {\n  font-weight: bolder;\n}\n.comment-date {\n  width: auto;\n  margin-left: auto;\n}\n.comment-content {\n  font-style: italic;\n  padding: 0.3rem;\n}\n.comment-actions {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n.comment-actions i {\n  margin: 0 0.3rem;\n  padding: 0.3rem 0;\n  cursor: pointer;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}